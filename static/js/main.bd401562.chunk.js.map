{"version":3,"sources":["api/api.ts","api/posts.ts","components/Loader/Loader.tsx","components/PostsList/PostsList.tsx","components/NewCommentForm/NewCommentForm.tsx","api/comments.ts","components/PostDetails/PostDetails.tsx","api/users.ts","components/UserSelect/UserSelect.tsx","App.tsx","index.tsx"],"names":["BASE_URL","request","url","a","item","fetch","response","json","getUserPosts","userId","getPosts","getPostsDetails","postId","Loader","className","PostsList","props","selectPost","selectPostId","selectUserId","useState","posts","setPosts","loader","setLoader","useEffect","then","map","post","title","type","onClick","id","NewCommentForm","addNewComment","name","setName","email","setEmail","body","setBody","onSubmit","event","preventDefault","placeholder","value","onChange","target","getPostComments","deleteComment","commentId","method","addComment","newComment","headers","JSON","stringify","PostDetails","setPost","comments","setComments","isVisible","setVisible","length","comment","getUsers","UserSelect","selectUser","users","setUsers","user","App","setUserId","setPostId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd401562.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate.academy/students-api';\n\nexport const request = async (url: string, item = {}) => {\n  const response = await fetch(`${BASE_URL}${url}`, item);\n\n  return response.json();\n};\n","import { request } from './api';\n\nexport const getUserPosts = async (userId: number) => {\n  return request(`/posts?userId=${userId}`);\n};\n\nexport const getPosts = async () => {\n  return request('/posts');\n};\n\nexport const getPostsDetails = async (postId: number) => {\n  return request(`/post/:${postId}`);\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport './PostsList.scss';\nimport { getPosts, getUserPosts } from '../../api/posts';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectPost: (postId: number) => void;\n  selectPostId: number;\n  selectUserId: number;\n};\n\nexport const PostsList: React.FC<Props> = (props) => {\n  const { selectPost, selectPostId, selectUserId } = props;\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [loader, setLoader] = useState(true);\n\n  useEffect(() => {\n    if (selectUserId === 0) {\n      getPosts()\n        .then(response => {\n          setPosts(response);\n          setLoader(false);\n        });\n\n      return;\n    }\n\n    getUserPosts(selectUserId)\n      .then(response => {\n        setPosts(response);\n        setLoader(false);\n      });\n  }, [selectUserId]);\n\n  const handleChange = (id: number) => {\n    if (selectPostId === id) {\n      selectPost(0);\n    } else {\n      selectPost(id);\n    }\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n      {loader && (\n        <Loader />\n      )}\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li className=\"PostsList__item\" key={post.id}>\n            <div>\n              <b>\n                {`[User #${post.userId}]: `}\n              </b>\n              {post.title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => handleChange(post.id)}\n            >\n              {selectPostId === post.id\n                ? 'Close'\n                : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  selectPostId: number;\n  addNewComment: (comment: Comment) => void;\n};\n\nexport const NewCommentForm: React.FC<Props> = (props) => {\n  const { selectPostId, addNewComment } = props;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const reset = () => {\n    setBody('');\n    setName('');\n    setEmail('');\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const newComment = {\n      postId: selectPostId,\n      name,\n      email,\n      body,\n    };\n\n    addNewComment(newComment as Comment);\n    reset();\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={(event) => setName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={(event) => setEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={(event) => setBody(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import { request } from './api';\n\nexport const getPostComments = async (postId: number) => {\n  return request(`/comments?postId=${postId}`);\n};\n\nexport const deleteComment = async (commentId: number) => {\n  return request(`/comments/${commentId}`, { method: 'DELETE' });\n};\n\nexport const addComment = async (newComment: Comment) => {\n  return request('/comments', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(newComment),\n  });\n};\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostsDetails } from '../../api/posts';\nimport { getPostComments, addComment, deleteComment } from '../../api/comments';\nimport './PostDetails.scss';\n\ntype Props = {\n  selectPostId: number;\n};\n\nexport const PostDetails: React.FC<Props> = (props) => {\n  const { selectPostId } = props;\n  const [posts, setPost] = useState<Post | null>(null);\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [isVisible, setVisible] = useState(true);\n  const [loader, setLoader] = useState(true);\n\n  useEffect(() => {\n    getPostsDetails(selectPostId)\n      .then(response => {\n        setPost(response);\n        setLoader(false);\n      });\n    getPostComments(selectPostId)\n      .then(response => {\n        setComments(response);\n        setLoader(false);\n      });\n  }, [selectPostId]);\n\n  const addNewComment = (newComment: Comment) => {\n    addComment(newComment)\n      .then(() => getPostComments(selectPostId))\n      .then(response => setComments(response));\n  };\n\n  const removeComment = (id: number) => {\n    deleteComment(id)\n      .then(() => getPostComments(selectPostId))\n      .then(response => setComments(response));\n  };\n\n  const handleChange = () => {\n    setVisible(!isVisible);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      {loader && (\n        <Loader />\n      )}\n\n      <section className=\"PostDetails__post\">\n        <p>{posts?.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={handleChange}\n        >\n          {\n            isVisible\n              ? `Hide ${comments.length} coments`\n              : `Show ${comments.length} coments`\n          }\n        </button>\n\n        <ul className=\"PostDetails__list\">\n          {isVisible && (\n            <>\n              {comments.map(comment => (\n                <li\n                  className=\"PostDetails__list-item\"\n                  key={comment.id}\n                >\n                  <button\n                    type=\"button\"\n                    className=\"PostDetails__remove-button button\"\n                    onClick={() => removeComment(comment.id)}\n                  >\n                    X\n                  </button>\n                  <p>\n                    {comment.body}\n                  </p>\n                </li>\n              ))}\n            </>\n          )}\n        </ul>\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            selectPostId={selectPostId}\n            addNewComment={addNewComment}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import { request } from './api';\n\nexport const getUsers = async () => {\n  return request('/users');\n};\n","import React, { useEffect, useState } from 'react';\nimport { getUsers } from '../../api/users';\nimport './UserSelect.scss';\n\ntype Props = {\n  selectUser: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n};\n\nexport const UserSelect: React.FC<Props> = (props) => {\n  const { selectUser } = props;\n  const [users, setUsers] = useState<User[]>([]);\n\n  useEffect(() => {\n    getUsers()\n      .then(user => setUsers(user));\n  }, []);\n\n  return (\n    users && (\n      <label>\n        Select a user: &nbsp;\n        <select\n          className=\"App__user-selector\"\n          onChange={selectUser}\n        >\n          <option value=\"0\">All users</option>\n          {users.map(user => (\n            <option\n              key={user.id}\n              value={user.id}\n            >\n              {user.name}\n            </option>\n          ))}\n        </select>\n      </label>\n    )\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelect } from './components/UserSelect/UserSelect';\n\nconst App: React.FC = () => {\n  const [userId, setUserId] = useState(0);\n  const [postId, setPostId] = useState(0);\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <UserSelect selectUser={handleSelect} />\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            selectPost={setPostId}\n            selectPostId={postId}\n            selectUserId={userId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {postId !== 0 && (\n            <PostDetails selectPostId={postId} />\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}